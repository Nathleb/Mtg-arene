{"version":3,"sources":["../../../src/controllers/routes/cardlists.js"],"names":["express","require","router","Router","CardLists","mongoose","get","req","res","find","err","result","send","console","log","status","json","error","findById","params","id","put","findByIdAndUpdate","$push","cards_ids","cardId","$inc","size","model","post","_id","mongo","ObjectId","create","card","delete","deleteMany","module","exports"],"mappings":"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","sourcesContent":["const express = require(\"express\");\nconst router = express.Router();\nconst CardLists = require(\"../../models/CardList.js\");\nconst mongoose = require(\"mongoose\");\n\nrouter.get(\"/\", async (req, res) => {\n\ttry {\n\t\tCardLists.find({}, (err, result) => {\n\t\t\tif (err) throw err;\n\t\t\tres.send(result);\n\t\t});\n\t} catch (err) {\n\t\tconsole.log(err);\n\t\treturn res.status(400).json({ error: \"Something went wrong\" + err });\n\t}\n});\n\nrouter.get(\"/:id\", async (req, res) => {\n\ttry {\n\t\tCardLists.findById(req.params.id, (err, result) => {\n\t\t\tif (err) throw err;\n\t\t\tres.send(result);\n\t\t});\n\t} catch (err) {\n\t\tconsole.log(err);\n\t\treturn res.status(400).json({ error: \"Something went wrong\" + err });\n\t}\n});\n\nrouter.put(\"/:id/cardId/:cardId\", async (req, res) => {\n\ttry {\n\t\tCardLists.findByIdAndUpdate(\n\t\t\treq.params.id,\n\t\t\t{ $push: { cards_ids: req.params.cardId }, $inc: { size: 1 } },\n\t\t\t(err, model) => {\n\t\t\t\tif (err) throw err;\n\t\t\t\tres.send(model);\n\t\t\t}\n\t\t);\n\t} catch (err) {\n\t\tconsole.log(err);\n\t\treturn res.status(400).json({ error: \"Something went wrong\" + err });\n\t}\n});\n\nrouter.post(\"/cardid/:card\", async (req, res) => {\n\ttry {\n\t\tlet _id = mongoose.mongo.ObjectId();\n\t\tCardLists.create(\n\t\t\t{\n\t\t\t\t_id: _id,\n\t\t\t\tsize: 1,\n\t\t\t\tcards_ids: [req.params.card],\n\t\t\t},\n\t\t\t(err, model) => {\n\t\t\t\tif (err) throw err;\n\t\t\t\tres.send(model);\n\t\t\t}\n\t\t);\n\t} catch (err) {\n\t\tconsole.log(err);\n\t\treturn res.status(400).json({ error: \"Something went wrong\" + err });\n\t}\n});\n\n// router.delete(\"/:id\", async (req, res) => {\n// \ttry {\n// \t\tCardLists.findByIdAndDelete(req.params.id, (err, model) => {\n// \t\t\tif (err) throw err;\n// \t\t\tres.send(model);\n// \t\t});\n// \t} catch (err) {\n// \t\tconsole.log(err);\n// \t\treturn res.status(400).json({ error: \"Something went wrong\" + err });\n// \t}\n// });\n\nrouter.delete(\"/all\", async (req, res) => {\n\ttry {\n\t\tCardLists.deleteMany({}, (err, model) => {\n\t\t\tif (err) throw err;\n\t\t\tres.send(model);\n\t\t});\n\t} catch (err) {\n\t\tconsole.log(err);\n\t\treturn res.status(400).json({ error: \"Something went wrong\" + err });\n\t}\n});\n\nmodule.exports = router;\n"],"file":"cardlists.js"}